// ==UserScript==
// @name        ExploitedX Sites - Release Codes
// @author      peolic
// @version     1.2
// @description Episode numbers for ExploitedX sites.
// @namespace   https://github.com/peolic
// ===== Exploited College Girls
// @match       http*://*.exploitedcollegegirls.com/
// @match       http*://*.exploitedcollegegirls.com/models/*
// @match       http*://*.exploitedcollegegirls.com/categories/movies_*
// ===== Backroom Casting Couch
// @match       http*://*.backroomcastingcouch.com/
// @match       http*://*.backroomcastingcouch.com/models/*
// @match       http*://*.backroomcastingcouch.com/categories/movies_*
// ===== Black Ambush
// @match       http*://*.blackambush.com/
// @match       http*://*.blackambush.com/models/*
// @match       http*://*.blackambush.com/categories/movies_*
// ===== BBC Surprise
// @match       http*://*.bbcsurprise.com/
// @match       http*://*.bbcsurprise.com/models/*
// @match       http*://*.bbcsurprise.com/categories/movies_*
// ===== Hot MILFs Fuck
// @match       http*://*.hotmilfsfuck.com/
// @match       http*://*.hotmilfsfuck.com/models/*
// @match       http*://*.hotmilfsfuck.com/categories/movies_*
// =====
// @grant       none
// @homepageURL https://github.com/peolic/userscripts
// @downloadURL https://raw.githubusercontent.com/peolic/userscripts/main/exploitedx-release-codes.user.js
// @updateURL   https://raw.githubusercontent.com/peolic/userscripts/main/exploitedx-release-codes.user.js
// ==/UserScript==

//@ts-check
(() => {
  /**
   * @param {HTMLDivElement} infoDiv release info element
   * @param {HTMLDivElement} item video item element
   * @returns {void}
   * @throws no target error
   */
  function injectDefault(infoDiv, item) {
    let target = item.querySelector('.rating-div') || item.querySelector('.content-div .text-right');
    if (target)
      return target.prepend(infoDiv);
    target = item.querySelector('.content-div');
    if (target)
      return target.append(infoDiv);
    throw new Error('no target');
  }

  /**
   * @typedef SiteType
   * @property {RegExp} pattern
   * @property {(infoDiv: HTMLDivElement, item: HTMLDivElement) => void} inject
   * @property {string} [textColor]
   * @property {Partial<CSSStyleDeclaration>} [style]
   */

  /** @type {{ [hostname: string]: Partial<SiteType> }} */
  const SITES = {
    'exploitedcollegegirls.com': {
      textColor: '#000000',
      // inject: injectDefault,
    },
    'www.backroomcastingcouch.com': {
      textColor: '#dd0066',
      style: {
        float: 'right',
      },
      inject: (infoDiv, item) => {
        let target = item.querySelector('.content-div');
        if (target) {
          if (window.location.pathname.startsWith('/models/')) {
            /** @type {HTMLDivElement} */ (item.parentElement).classList.add('col-lg-8');
            const row = /** @type {HTMLDivElement} */ (target.querySelector('div'));
            row.children[0].classList.add('col-lg-8');
            row.children[1].classList.add('col-lg-4');
          }
          return target.prepend(infoDiv);
        }
        throw new Error('no target');
      },
    },
    'blackambush.com': {
      textColor: '#ffa901',
      // inject: injectDefault,
    },
    'bbcsurprise.com': {
      textColor: '#ffa901',
      // inject: injectDefault,
    },
    'hotmilfsfuck.com': {
      textColor: '#d52023',
      // inject: injectDefault,
    },
  };

  // https://regex101.com/r/BtryUh/4
  const globalPattern = /(?<site>ecg|brcc|ba|blackambush|hmf).*?(?<release>\d{4})/;

  /** @type {SiteType} */
  const defaultSite = {
    pattern: globalPattern,
    inject: injectDefault,
  };

  /** @type {NodeListOf<HTMLDivElement>} */
  (document.querySelectorAll('.item-video')).forEach((item) => {
    const videoSrc = item.querySelector('video > source')?.getAttribute('src');
    if (!videoSrc) return;

    const filename = videoSrc.split(/\//g).slice(-1)[0];
    const options = { ...defaultSite, ...SITES[window.location.hostname] };
    const { pattern, textColor, inject, style } = options;

    const result = filename.match(pattern);
    const { site, release } = result?.groups ?? {};

    const infoDiv = document.createElement('div');
    Object.assign(infoDiv.style, { position: 'relative' });
    const info = document.createElement('span');
    Object.assign(info.style, {
      color: textColor,
      fontWeight: 600,
      ...(style ?? {
        position: 'absolute',
        right: '0',
        top: '-22px',
      }),
    });
    info.innerText = release !== undefined ? `#${release}` : filename;
    info.title = `${site}-${release}\n${filename}`;
    infoDiv.appendChild(info);

    inject(infoDiv, item);
  });

})();
